# -*- coding: utf-8 -*-
"""Base module for unittesting."""

{{% if plone.is_plone5 %}}
from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FIXTURE
{{% endif %}}
from plone.app.robotframework.testing import AUTOLOGIN_LIBRARY_FIXTURE
from plone.app.testing import applyProfile
from plone.app.testing import FunctionalTesting
from plone.app.testing import IntegrationTesting
{{% if not plone.is_plone5 %}}
from plone.app.testing import PLONE_FIXTURE
{{% endif %}}
from plone.app.testing import PloneSandboxLayer
from plone.app.testing import TEST_USER_ID
from plone.app.testing import TEST_USER_NAME
from plone.app.testing import login
from plone.app.testing import setRoles
from plone.testing import z2
from zope.configuration import xmlconfig

import {{{ package.dottedname }}}


class {{{ package.browserlayer }}}(PloneSandboxLayer):

{{% if plone.is_plone5 %}}
    defaultBases = (PLONE_APP_CONTENTTYPES_FIXTURE,)
{{% endif %}}
{{% if not plone.is_plone5 %}}
    defaultBases = (PLONE_FIXTURE,)
{{% endif %}}

    def setUpZope(self, app, configurationContext):
        xmlconfig.file(
            'configure.zcml',
            {{{ package.dottedname }}},
            context=configurationContext
        )

    def setUpPloneSite(self, portal):
        """Set up Plone."""
        applyProfile(portal, '{{{ package.dottedname }}}:default')
        # Login and create some test content
        setRoles(portal, TEST_USER_ID, ['Manager'])
        login(portal, TEST_USER_NAME)


{{{package.uppercasename}}}_FIXTURE = {{{ package.browserlayer }}}()


{{{package.uppercasename}}}_INTEGRATION_TESTING = IntegrationTesting(
    bases=({{{package.uppercasename}}}_FIXTURE,),
    name='{{{ package.browserlayer }}}:IntegrationTesting'
)


{{{package.uppercasename}}}_FUNCTIONAL_TESTING = FunctionalTesting(
    bases=({{{package.uppercasename}}}_FIXTURE,),
    name='{{{ package.browserlayer }}}:FunctionalTesting'
)


{{{package.uppercasename}}}_ACCEPTANCE_TESTING = FunctionalTesting(
    bases=({{{package.uppercasename}}}_FIXTURE, AUTOLOGIN_LIBRARY_FIXTURE, z2.ZSERVER_FIXTURE),
    name='{{{ package.browserlayer }}}:AcceptanceTesting'
)
